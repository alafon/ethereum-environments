#!/bin/bash

# vim: set filetype=sh :

<%= @service_info %>

PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

. /lib/lsb/init-functions

# Config vars from
SERVICE=<%= @service %>
CONFIG_FILE=<%= @config_file %>
DAEMON_PATH=<%= @daemon_path %>

# Pull in any appropriate overrides
if [ -r $CONFIG_FILE ]; then
  . $CONFIG_FILE
else
  echo "cannot open config file '$CONFIG_FILE'"
  exit 1
fi

# DAEMON_ARGS depends on vars defined in the config file
DAEMON_ARGS=<%= @daemon_args %>

function start {
  log_daemon_msg "Starting $SERVICE" $SERVICE

  # Ensure user can write log file
  mkdir -p $(dirname $LOG_FILE)
  chown $USER $(dirname $LOG_FILE)
  if [ -f $LOG_FILE ]; then
    sudo -u $USER mv $LOG_FILE $LOG_FILE-$(date +"%Y%m%d-%H$%M%S")
  fi
  touch $LOG_FILE
  chown $USER $LOG_FILE
  chmod 0640 $LOG_FILE

  # Ensure user can write pid file
  touch $PID_FILE
  chown $USER $PID_FILE

  log_daemon_msg "start-stop-daemon --start -b --user $USER --pidfile $PID_FILE    \
                    --exec $DAEMON_PATH                   \
                    --make-pidfile --pidfile $PID_FILE             \
                    -- $DAEMON_ARGS"

  start-stop-daemon --start -b --user $USER --pidfile $PID_FILE    \
                    --exec $DAEMON_PATH                   \
                    --make-pidfile --pidfile $PID_FILE             \
                    -- $DAEMON_ARGS

  status=$?
  test x$status = x0 && chown root $PID_FILE
  log_end_msg $status
}

function stop {
  log_daemon_msg "Stopping $SERVICE" $SERVICE
  start-stop-daemon --stop --quiet --oknodo --pidfile $PID_FILE
  status=$?
  test x$status = x0 && rm $PID_FILE
  log_end_msg $status
}

case "$1" in
  start)
    start;
    ;;
  stop)
    stop;
    ;;
  restart|force-reload)
    stop;
    start;
    ;;
  status)
    status_of_proc -p "$PID_FILE" $DAEMON_PATH $SERVICE
    ;;
  *)
    echo "Usage: "$1" {start|stop|restart|force-reload}"
    exit 192
esac

exit 0